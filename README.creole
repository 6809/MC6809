=== Dragon 32 emulator in Python

A Open source (GPL v3 or later) emulator for the 30years old homecomputer {{{Dragon 32}}}...

It's in a eary development state and not usable, yet.
A usable Dragon / CoCo emulator is [[http://www.6809.org.uk/dragon/xroar.shtml|XRoar]].

DragonPy will not be a second XRoar written in Python.
This project is primarily to lean and understand.

The first target is to be able to run the Simple6809 design.
More info about Simple6809, read: [[https://github.com/jedie/DragonPy/blob/master/Simple6809/README.creole|/Simple6809/README.creole]]

Future goals are:
* run Dragon 32 ROMs (maybe in far future: Dragon 64)
* Implement a integrated development environment for BASIC programs


== example

Start Simple6809 (with debug output):
{{{
DragonPy$ ./DragonPy_CLI.py --cfg Simple6809Cfg --verbosity=5
}}}

Start Dragon 32 (with debug output):
{{{
DragonPy$ ./DragonPy_CLI.py --cfg Dragon32Cfg --verbosity=5
}}}

== CLI

{{{
optional arguments:
  -h, --help            show this help message and exit
  --verbosity {5,7,0,10,20,30,40,50}
                        verbosity level to stdout (lower == more output!)
                        (default: 20)
  --logfile {5,7,0,10,20,30,40,50}
                        verbosity level to log file (lower == more output!)
                        (default: 10)
  --log_formatter LOG_FORMATTER
                        see: http://docs.python.org/2/library/logging.html
                        #logrecord-attributes
  --cfg {Simple6809Cfg,Dragon32Cfg}
                        Used configuration
  --bus_socket_host BUS_SOCKET_HOST
                        Host internal socket bus I/O (do not set manually!)
  --bus_socket_port BUS_SOCKET_PORT
                        Port for internal socket bus I/O (do not set
                        manually!)
  --ram RAM             RAM file to load (default none)
  --rom ROM             ROM file to use (default d32.rom)
  --max MAX             If given: Stop CPU after given cycles else: run
                        forever
  --area_debug_active AREA_DEBUG_ACTIVE
                        Debug in PC area: <level>:<start>-<end> - e.g.:
                        --area_debug_active=10:db79-ffff
}}}


== current status

The Simple6809 config works a little bit. First GUI used a simple Tkinter windows.
Looks like this:
{{http://www.pylucid.org/media/jensdiemer.de/screenshots/Simple6809_TK_01.PNG}}

Try to enter a BASIC command ends with a jump into the ROM command table.
e.g. a {{{PRINT}}} jumps to **de38** here:
{{{
                        *
                        * DISPATCH TABLE FOR COMMANDS TOKEN #
                        CMD_TAB
...
0085                    TOK_IF    EQU  *-CMD_TAB/2+$7F
de36 e1 8d                        FDB  DATA                        86
0086                    TOK_DATA  EQU  *-CMD_TAB/2+$7F
de38 eb 6a                        FDB  PRINT                       87
0087                    TOK_PRINT EQU  *-CMD_TAB/2+$7F
de3a e1 ef                        FDB  ON                          88
}}}
see: https://github.com/jedie/DragonPy/blob/master/Simple6809/ExBasROM.LST#L708

The jumps comes from:
{{{
                        * HERE IS WHERE WE BRANCH TO DO A 'COMMAND'
e08f 6e 94                        JMP  [,X]                       GO DO A COMMAND
}}}
see: https://github.com/jedie/DragonPy/blob/master/Simple6809/ExBasROM.LST#L1060

debug output at this steps looks like this:
{{{
e08f| 6e   JMP    ea:de38                     cc=57 a=00 b=0e dp=00 x=de38 y=dd35 u=00f7 s=7f32 | .F.I.ZVC
de38| eb   ADDB   B=0e ea:7f3c m:0            cc=50 a=00 b=0e dp=00 x=de38 y=dd35 u=00f7 s=7f32 | .F.I....
de3a| e1   CMPB   B=0e ea:e29c m:c6           cc=53 a=00 b=0e dp=00 x=de38 y=dd35 u=00f7 s=7f32 | .F.I..VC
de3e| e0   SUBB   B=0e ea:deff m:25           cc=53 a=00 b=e9 dp=00 x=de38 y=dd35 u=00f7 s=7f32 | .F.I..VC
...
}}}


== Links

Some links:

 * http://www.burgins.com/m6809.html
 * http://www.maddes.net/m6809pm/ - Programming Manual for the 6809 microprocessor from Motorola Inc. (now Freescale)
 * http://www.6809.org.uk/dragon/hardware.shtml
 * http://dragondata.worldofdragon.org/Publications/inside-dragon.htm
 * http://koti.mbnet.fi/~atjs/mc6809/ - 6809 Emulation Page

Source codes:
 * http://mamedev.org/source/src/mess/drivers/dragon.c.html
 * http://mamedev.org/source/src/mess/machine/dragon.c.html
 * http://mamedev.org/source/src/emu/cpu/m6809/m6809.c.html
 * https://github.com/kjetilhoem/hatchling-32/blob/master/hatchling-32/src/no/k/m6809/InstructionSet.scala

Dragon 32 resources:

 * Forum: http://archive.worldofdragon.org/phpBB3/index.php
 * Wiki: http://archive.worldofdragon.org/index.php?title=Main_Page


== Credits

Based on:

ApplePy - an Apple ][ emulator in Python by James Tauber:

 * https://github.com/jtauber/applepy

ApplyPy is free software, licensed under MIT License.


Some code based on "Xroar" by Ciaran Anscomb:

 * http://www.6809.org.uk/dragon/xroar.shtml

XRoar is free software, licensed under GNU GPL v2 or above



== Links:

| Forum               | [[http://forum.pylucid.org/]]
| IRC                 | [[http://www.pylucid.org/permalink/304/irc-channel|#pylucid on freenode.net]]
| Jabber              | [[xmpp://pylucid@conference.jabber.org|pylucid@conference.jabber.org]]
| Github              | [[https://github.com/jedie/DragonPy]]