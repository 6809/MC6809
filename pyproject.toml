[tool.poetry]
name = "MC6809"
version = "0.6.0"
description = "MC6809 CPU emulator written in Python"
authors = ["JensDiemer <git@jensdiemer.de>"]
packages = [
    { include = "MC6809" },
]
keywords=["MC6809", "CPU", "Emulator"]
classifiers = [
    # http://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 4 - Beta",
#    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: System :: Emulators",
    "Topic :: Software Development :: Assemblers",
    "Topic :: Software Development :: Testing",
]
readme="README.md"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"

[tool.poetry.dev-dependencies]
#DragonPyEmulator = "*"  # run DragonPy tests, to. e.g. with BASIC Interpreter
dev_shell = "*"  # https://github.com/jedie/dev-shell
cmd2_ext_test = "*"
poetry_publish = "*"
tox = "*"
pytest = "*"
pytest-cov = "*"
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
isort = "*"
flake8 = "*"
flynt = "*"

[tool.poetry.scripts]
devshell = 'MC6809.dev_shell:devshell_cmdloop'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 120
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
line_length=120
skip_glob=[".*", "*/htmlcov/*",]
known_first_party=["MC6809"]
lines_after_imports=2


[tool.coverage.run]
omit = [".*"]


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* __pycache__ coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --darker
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
"""
# TODO: --mypy


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py310,py39,py38
skip_missing_interpreters = True

[testenv]
passenv = *
whitelist_externals = python
commands =
    python --version
    python devshell.py pytest
"""
