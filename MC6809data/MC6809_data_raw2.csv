instr.	opcode	dez	mnemonic	register	needs ea	read	write	addr.mode	desc
ABX	0x3a	58	ABX					INHERENT	X = B+X (Unsigned)
ADC	0x99	153	ADCA	REG_A		BYTE		DIRECT	A = A+M+C
ADC	0xb9	185	ADCA	REG_A		BYTE		EXTENDED	A = A+M+C
ADC	0x89	137	ADCA	REG_A		BYTE		IMMEDIATE	A = A+M+C
ADC	0xa9	169	ADCA	REG_A		BYTE		INDEXED	A = A+M+C
ADC	0xd9	217	ADCB	REG_B		BYTE		DIRECT	B = B+M+C
ADC	0xf9	249	ADCB	REG_B		BYTE		EXTENDED	B = B+M+C
ADC	0xc9	201	ADCB	REG_B		BYTE		IMMEDIATE	B = B+M+C
ADC	0xe9	233	ADCB	REG_B		BYTE		INDEXED	B = B+M+C
ADD	0x9b	155	ADDA	REG_A		BYTE		DIRECT	A = A+M
ADD	0xbb	187	ADDA	REG_A		BYTE		EXTENDED	A = A+M
ADD	0x8b	139	ADDA	REG_A		BYTE		IMMEDIATE	A = A+M
ADD	0xab	171	ADDA	REG_A		BYTE		INDEXED	A = A+M
ADD	0xdb	219	ADDB	REG_B		BYTE		DIRECT	B = B+M
ADD	0xfb	251	ADDB	REG_B		BYTE		EXTENDED	B = B+M
ADD	0xcb	203	ADDB	REG_B		BYTE		IMMEDIATE	B = B+M
ADD	0xeb	235	ADDB	REG_B		BYTE		INDEXED	B = B+M
ADD	0xd3	211	ADDD	REG_D		WORD		DIRECT_WORD	D = D+M:M+1
ADD	0xf3	243	ADDD	REG_D		WORD		EXTENDED_WORD	D = D+M:M+1
ADD	0xc3	195	ADDD	REG_D		WORD		IMMEDIATE_WORD	D = D+M:M+1
ADD	0xe3	227	ADDD	REG_D		WORD		INDEXED_WORD	D = D+M:M+1
AND	0x94	148	ANDA	REG_A		BYTE		DIRECT	A = A && M
AND	0xb4	180	ANDA	REG_A		BYTE		EXTENDED	A = A && M
AND	0x84	132	ANDA	REG_A		BYTE		IMMEDIATE	A = A && M
AND	0xa4	164	ANDA	REG_A		BYTE		INDEXED	A = A && M
AND	0xd4	212	ANDB	REG_B		BYTE		DIRECT	B = B && M
AND	0xf4	244	ANDB	REG_B		BYTE		EXTENDED	B = B && M
AND	0xc4	196	ANDB	REG_B		BYTE		IMMEDIATE	B = B && M
AND	0xe4	228	ANDB	REG_B		BYTE		INDEXED	B = B && M
AND	0x1c	28	ANDCC	REG_CC		BYTE		IMMEDIATE	C = CC && IMM
ASR	0x7	7	ASR		yes	BYTE	BYTE	DIRECT	M = Arithmetic shift M right
ASR	0x77	119	ASR		yes	BYTE	BYTE	EXTENDED	M = Arithmetic shift M right
ASR	0x67	103	ASR		yes	BYTE	BYTE	INDEXED	M = Arithmetic shift M right
ASR	0x47	71	ASRA	REG_A				INHERENT	A = Arithmetic shift A right
ASR	0x57	87	ASRB	REG_B				INHERENT	B = Arithmetic shift B right
BHS	0x24	36	BCC		yes			RELATIVE	None
BEQ	0x27	39	BEQ		yes			RELATIVE	None
BGE	0x2c	44	BGE		yes			RELATIVE	None
BGT	0x2e	46	BGT		yes			RELATIVE	None
BHI	0x22	34	BHI		yes			RELATIVE	None
BIT	0x95	149	BITA	REG_A		BYTE		DIRECT	Bit Test A (M&&A)
BIT	0xb5	181	BITA	REG_A		BYTE		EXTENDED	Bit Test A (M&&A)
BIT	0x85	133	BITA	REG_A		BYTE		IMMEDIATE	Bit Test A (M&&A)
BIT	0xa5	165	BITA	REG_A		BYTE		INDEXED	Bit Test A (M&&A)
BIT	0xd5	213	BITB	REG_B		BYTE		DIRECT	Bit Test B (M&&B)
BIT	0xf5	245	BITB	REG_B		BYTE		EXTENDED	Bit Test B (M&&B)
BIT	0xc5	197	BITB	REG_B		BYTE		IMMEDIATE	Bit Test B (M&&B)
BIT	0xe5	229	BITB	REG_B		BYTE		INDEXED	Bit Test B (M&&B)
BLE	0x2f	47	BLE		yes			RELATIVE	None
BLO	0x25	37	BLO		yes			RELATIVE	None
BLS	0x23	35	BLS		yes			RELATIVE	None
BLT	0x2d	45	BLT		yes			RELATIVE	None
BMI	0x2b	43	BMI		yes			RELATIVE	None
BNE	0x26	38	BNE		yes			RELATIVE	None
BPL	0x2a	42	BPL		yes			RELATIVE	None
BRA	0x20	32	BRA		yes			RELATIVE	None
BRN	0x21	33	BRN		yes			RELATIVE	None
BSR	0x8d	141	BSR		yes			RELATIVE	None
BVC	0x28	40	BVC		yes			RELATIVE	None
BVS	0x29	41	BVS		yes			RELATIVE	None
CLR	0xf	15	CLR		yes		BYTE	DIRECT	M = 0
CLR	0x7f	127	CLR		yes		BYTE	EXTENDED	M = 0
CLR	0x6f	111	CLR		yes		BYTE	INDEXED	M = 0
CLR	0x4f	79	CLRA	REG_A				INHERENT	A = 0
CLR	0x5f	95	CLRB	REG_B				INHERENT	B = 0
CMP	0x91	145	CMPA	REG_A		BYTE		DIRECT	Compare M from A
CMP	0xb1	177	CMPA	REG_A		BYTE		EXTENDED	Compare M from A
CMP	0x81	129	CMPA	REG_A		BYTE		IMMEDIATE	Compare M from A
CMP	0xa1	161	CMPA	REG_A		BYTE		INDEXED	Compare M from A
CMP	0xd1	209	CMPB	REG_B		BYTE		DIRECT	Compare M from B
CMP	0xf1	241	CMPB	REG_B		BYTE		EXTENDED	Compare M from B
CMP	0xc1	193	CMPB	REG_B		BYTE		IMMEDIATE	Compare M from B
CMP	0xe1	225	CMPB	REG_B		BYTE		INDEXED	Compare M from B
CMP	0x1093	4243	CMPD	REG_D		WORD		DIRECT_WORD	Compare M:M+1 from D
CMP	0x10b3	4275	CMPD	REG_D		WORD		EXTENDED_WORD	Compare M:M+1 from D
CMP	0x1083	4227	CMPD	REG_D		WORD		IMMEDIATE_WORD	Compare M:M+1 from D
CMP	0x10a3	4259	CMPD	REG_D		WORD		INDEXED_WORD	Compare M:M+1 from D
CMP	0x119c	4508	CMPS	REG_S		WORD		DIRECT_WORD	Compare M:M+1 from S
CMP	0x11bc	4540	CMPS	REG_S		WORD		EXTENDED_WORD	Compare M:M+1 from S
CMP	0x118c	4492	CMPS	REG_S		WORD		IMMEDIATE_WORD	Compare M:M+1 from S
CMP	0x11ac	4524	CMPS	REG_S		WORD		INDEXED_WORD	Compare M:M+1 from S
CMP	0x1193	4499	CMPU	REG_U		WORD		DIRECT_WORD	Compare M:M+1 from U
CMP	0x11b3	4531	CMPU	REG_U		WORD		EXTENDED_WORD	Compare M:M+1 from U
CMP	0x1183	4483	CMPU	REG_U		WORD		IMMEDIATE_WORD	Compare M:M+1 from U
CMP	0x11a3	4515	CMPU	REG_U		WORD		INDEXED_WORD	Compare M:M+1 from U
CMP	0x9c	156	CMPX	REG_X		WORD		DIRECT_WORD	Compare M:M+1 from X
CMP	0xbc	188	CMPX	REG_X		WORD		EXTENDED_WORD	Compare M:M+1 from X
CMP	0x8c	140	CMPX	REG_X		WORD		IMMEDIATE_WORD	Compare M:M+1 from X
CMP	0xac	172	CMPX	REG_X		WORD		INDEXED_WORD	Compare M:M+1 from X
CMP	0x109c	4252	CMPY	REG_Y		WORD		DIRECT_WORD	Compare M:M+1 from Y
CMP	0x10bc	4284	CMPY	REG_Y		WORD		EXTENDED_WORD	Compare M:M+1 from Y
CMP	0x108c	4236	CMPY	REG_Y		WORD		IMMEDIATE_WORD	Compare M:M+1 from Y
CMP	0x10ac	4268	CMPY	REG_Y		WORD		INDEXED_WORD	Compare M:M+1 from Y
COM	0x3	3	COM		yes	BYTE	BYTE	DIRECT	M = complement(M)
COM	0x73	115	COM		yes	BYTE	BYTE	EXTENDED	M = complement(M)
COM	0x63	99	COM		yes	BYTE	BYTE	INDEXED	M = complement(M)
COM	0x43	67	COMA	REG_A				INHERENT	A = complement(A)
COM	0x53	83	COMB	REG_B				INHERENT	B = complement(B)
CWAI	0x3c	60	CWAI			BYTE		IMMEDIATE	CC = CC ^ IMM; (Wait for Interrupt)
DAA	0x19	25	DAA					INHERENT	Decimal Adjust A
DEC	0xa	10	DEC		yes	BYTE	BYTE	DIRECT	M = M - 1
DEC	0x7a	122	DEC		yes	BYTE	BYTE	EXTENDED	M = M - 1
DEC	0x6a	106	DEC		yes	BYTE	BYTE	INDEXED	M = M - 1
DEC	0x4a	74	DECA	REG_A				INHERENT	A = A - 1
DEC	0x5a	90	DECB	REG_B				INHERENT	B = B - 1
EOR	0x98	152	EORA	REG_A		BYTE		DIRECT	A = A XOR M
EOR	0xb8	184	EORA	REG_A		BYTE		EXTENDED	A = A XOR M
EOR	0x88	136	EORA	REG_A		BYTE		IMMEDIATE	A = A XOR M
EOR	0xa8	168	EORA	REG_A		BYTE		INDEXED	A = A XOR M
EOR	0xd8	216	EORB	REG_B		BYTE		DIRECT	B = M XOR B
EOR	0xf8	248	EORB	REG_B		BYTE		EXTENDED	B = M XOR B
EOR	0xc8	200	EORB	REG_B		BYTE		IMMEDIATE	B = M XOR B
EOR	0xe8	232	EORB	REG_B		BYTE		INDEXED	B = M XOR B
EXG	0x1e	30	EXG						exchange R1,R2
INC	0xc	12	INC		yes	BYTE	BYTE	DIRECT	M = M + 1
INC	0x7c	124	INC		yes	BYTE	BYTE	EXTENDED	M = M + 1
INC	0x6c	108	INC		yes	BYTE	BYTE	INDEXED	M = M + 1
INC	0x4c	76	INCA	REG_A				INHERENT	A = A + 1
INC	0x5c	92	INCB	REG_B				INHERENT	B = B + 1
JMP	0xe	14	JMP		yes			DIRECT	pc = EA
JMP	0x7e	126	JMP		yes			EXTENDED	pc = EA
JMP	0x6e	110	JMP		yes			INDEXED	pc = EA
JSR	0x9d	157	JSR		yes			DIRECT	jump to subroutine
JSR	0xbd	189	JSR		yes			EXTENDED	jump to subroutine
JSR	0xad	173	JSR		yes			INDEXED	jump to subroutine
BHS	0x1024	4132	LBCC		yes			RELATIVE_WORD	None
BLO	0x1025	4133	LBCS		yes			RELATIVE_WORD	None
BEQ	0x1027	4135	LBEQ		yes			RELATIVE_WORD	None
BGE	0x102c	4140	LBGE		yes			RELATIVE_WORD	None
BGT	0x102e	4142	LBGT		yes			RELATIVE_WORD	None
BHI	0x1022	4130	LBHI		yes			RELATIVE_WORD	None
BLE	0x102f	4143	LBLE		yes			RELATIVE_WORD	None
BLS	0x1023	4131	LBLS		yes			RELATIVE_WORD	None
BLT	0x102d	4141	LBLT		yes			RELATIVE_WORD	None
BMI	0x102b	4139	LBMI		yes			RELATIVE_WORD	None
BNE	0x1026	4134	LBNE		yes			RELATIVE_WORD	None
BPL	0x102a	4138	LBPL		yes			RELATIVE_WORD	None
BRA	0x16	22	LBRA		yes			RELATIVE_WORD	None
BRN	0x1021	4129	LBRN		yes			RELATIVE_WORD	None
BSR	0x17	23	LBSR		yes			RELATIVE_WORD	None
BVC	0x1028	4136	LBVC		yes			RELATIVE_WORD	None
BVS	0x1029	4137	LBVS		yes			RELATIVE_WORD	None
LD	0x96	150	LDA	REG_A		BYTE		DIRECT	A = M
LD	0xb6	182	LDA	REG_A		BYTE		EXTENDED	A = M
LD	0x86	134	LDA	REG_A		BYTE		IMMEDIATE	A = M
LD	0xa6	166	LDA	REG_A		BYTE		INDEXED	A = M
LD	0xd6	214	LDB	REG_B		BYTE		DIRECT	B = M
LD	0xf6	246	LDB	REG_B		BYTE		EXTENDED	B = M
LD	0xc6	198	LDB	REG_B		BYTE		IMMEDIATE	B = M
LD	0xe6	230	LDB	REG_B		BYTE		INDEXED	B = M
LD	0xdc	220	LDD	REG_D		WORD		DIRECT_WORD	D = M:M+1
LD	0xfc	252	LDD	REG_D		WORD		EXTENDED_WORD	D = M:M+1
LD	0xcc	204	LDD	REG_D		WORD		IMMEDIATE_WORD	D = M:M+1
LD	0xec	236	LDD	REG_D		WORD		INDEXED_WORD	D = M:M+1
LD	0x10de	4318	LDS	REG_S		WORD		DIRECT_WORD	S = M:M+1
LD	0x10fe	4350	LDS	REG_S		WORD		EXTENDED_WORD	S = M:M+1
LD	0x10ce	4302	LDS	REG_S		WORD		IMMEDIATE_WORD	S = M:M+1
LD	0x10ee	4334	LDS	REG_S		WORD		INDEXED_WORD	S = M:M+1
LD	0xde	222	LDU	REG_U		WORD		DIRECT_WORD	U = M:M+1
LD	0xfe	254	LDU	REG_U		WORD		EXTENDED_WORD	U = M:M+1
LD	0xce	206	LDU	REG_U		WORD		IMMEDIATE_WORD	U = M:M+1
LD	0xee	238	LDU	REG_U		WORD		INDEXED_WORD	U = M:M+1
LD	0x9e	158	LDX	REG_X		WORD		DIRECT_WORD	X = M:M+1
LD	0xbe	190	LDX	REG_X		WORD		EXTENDED_WORD	X = M:M+1
LD	0x8e	142	LDX	REG_X		WORD		IMMEDIATE_WORD	X = M:M+1
LD	0xae	174	LDX	REG_X		WORD		INDEXED_WORD	X = M:M+1
LD	0x109e	4254	LDY	REG_Y		WORD		DIRECT_WORD	Y = M:M+1
LD	0x10be	4286	LDY	REG_Y		WORD		EXTENDED_WORD	Y = M:M+1
LD	0x108e	4238	LDY	REG_Y		WORD		IMMEDIATE_WORD	Y = M:M+1
LD	0x10ae	4270	LDY	REG_Y		WORD		INDEXED_WORD	Y = M:M+1
LEA	0x32	50	LEAS	REG_S	yes			INDEXED	S = EA
LEA	0x33	51	LEAU	REG_U	yes			INDEXED	U = EA
LEA	0x30	48	LEAX	REG_X	yes			INDEXED	X = EA
LEA	0x31	49	LEAY	REG_Y	yes			INDEXED	Y = EA
LSL	0x8	8	LSL		yes	BYTE	BYTE	DIRECT	M = Logical shift M left
LSL	0x78	120	LSL		yes	BYTE	BYTE	EXTENDED	M = Logical shift M left
LSL	0x68	104	LSL		yes	BYTE	BYTE	INDEXED	M = Logical shift M left
LSL	0x48	72	LSLA	REG_A				INHERENT	A = Logical shift A left
LSL	0x58	88	LSLB	REG_B				INHERENT	B = Logical shift B left
LSR	0x4	4	LSR		yes	BYTE	BYTE	DIRECT	M = Logical shift M right
LSR	0x74	116	LSR		yes	BYTE	BYTE	EXTENDED	M = Logical shift M right
LSR	0x64	100	LSR		yes	BYTE	BYTE	INDEXED	M = Logical shift M right
LSR	0x44	68	LSRA	REG_A				INHERENT	A = Logical shift A right
LSR	0x54	84	LSRB	REG_B				INHERENT	B = Logical shift B right
MUL	0x3d	61	MUL					INHERENT	D = A*B (Unsigned)
NEG	0x0	0	NEG		yes	BYTE	BYTE	DIRECT	M = !M + 1
NEG	0x70	112	NEG		yes	BYTE	BYTE	EXTENDED	M = !M + 1
NEG	0x60	96	NEG		yes	BYTE	BYTE	INDEXED	M = !M + 1
NEG	0x40	64	NEGA	REG_A				INHERENT	A = !A + 1
NEG	0x50	80	NEGB	REG_B				INHERENT	B = !B + 1
NOP	0x12	18	NOP					INHERENT	No Operation
OR	0x9a	154	ORA	REG_A		BYTE		DIRECT	A = A || M
OR	0xba	186	ORA	REG_A		BYTE		EXTENDED	A = A || M
OR	0x8a	138	ORA	REG_A		BYTE		IMMEDIATE	A = A || M
OR	0xaa	170	ORA	REG_A		BYTE		INDEXED	A = A || M
OR	0xda	218	ORB	REG_B		BYTE		DIRECT	B = B || M
OR	0xfa	250	ORB	REG_B		BYTE		EXTENDED	B = B || M
OR	0xca	202	ORB	REG_B		BYTE		IMMEDIATE	B = B || M
OR	0xea	234	ORB	REG_B		BYTE		INDEXED	B = B || M
OR	0x1a	26	ORCC	REG_CC		BYTE		IMMEDIATE	C = CC || IMM
PAGE	0x10	16	PAGE 1						Page 1 Instructions prefix
PAGE	0x11	17	PAGE 2						Page 2 Instructions prefix
PSH	0x34	52	PSHS	REG_S		BYTE		IMMEDIATE	S -= 1: MEM(S) = R; Push Register on S Stack
PSH	0x36	54	PSHU	REG_U		BYTE		IMMEDIATE	U -= 1: MEM(U) = R; Push Register on U Stack
PUL	0x35	53	PULS	REG_S		BYTE		IMMEDIATE	R=MEM(S) : S += 1; Pull register from S Stack
PUL	0x37	55	PULU	REG_U		BYTE		IMMEDIATE	R=MEM(U) : U += 1; Pull register from U Stack
RESET	0x3e	62	RESET						Undocumented opcode
ROL	0x9	9	ROL		yes	BYTE	BYTE	DIRECT	M = Rotate M left thru carry
ROL	0x79	121	ROL		yes	BYTE	BYTE	EXTENDED	M = Rotate M left thru carry
ROL	0x69	105	ROL		yes	BYTE	BYTE	INDEXED	M = Rotate M left thru carry
ROL	0x49	73	ROLA	REG_A				INHERENT	A = Rotate A left thru carry
ROL	0x59	89	ROLB	REG_B				INHERENT	B = Rotate B left thru carry
ROR	0x6	6	ROR		yes	BYTE	BYTE	DIRECT	M = Rotate M Right thru carry
ROR	0x76	118	ROR		yes	BYTE	BYTE	EXTENDED	M = Rotate M Right thru carry
ROR	0x66	102	ROR		yes	BYTE	BYTE	INDEXED	M = Rotate M Right thru carry
ROR	0x46	70	RORA	REG_A				INHERENT	A = Rotate A Right thru carry
ROR	0x56	86	RORB	REG_B				INHERENT	B = Rotate B Right thru carry
RTI	0x3b	59	RTI					INHERENT	Return from Interrupt
RTS	0x39	57	RTS					INHERENT	Return from subroutine
SBC	0x92	146	SBCA	REG_A		BYTE		DIRECT	A = A - M - C
SBC	0xb2	178	SBCA	REG_A		BYTE		EXTENDED	A = A - M - C
SBC	0x82	130	SBCA	REG_A		BYTE		IMMEDIATE	A = A - M - C
SBC	0xa2	162	SBCA	REG_A		BYTE		INDEXED	A = A - M - C
SBC	0xd2	210	SBCB	REG_B		BYTE		DIRECT	B = B - M - C
SBC	0xf2	242	SBCB	REG_B		BYTE		EXTENDED	B = B - M - C
SBC	0xc2	194	SBCB	REG_B		BYTE		IMMEDIATE	B = B - M - C
SBC	0xe2	226	SBCB	REG_B		BYTE		INDEXED	B = B - M - C
SEX	0x1d	29	SEX					INHERENT	Sign extend B into A
ST	0x97	151	STA	REG_A	yes		BYTE	DIRECT	M = A
ST	0xb7	183	STA	REG_A	yes		BYTE	EXTENDED	M = A
ST	0xa7	167	STA	REG_A	yes		BYTE	INDEXED	M = A
ST	0xd7	215	STB	REG_B	yes		BYTE	DIRECT	M = B
ST	0xf7	247	STB	REG_B	yes		BYTE	EXTENDED	M = B
ST	0xe7	231	STB	REG_B	yes		BYTE	INDEXED	M = B
ST	0xdd	221	STD	REG_D	yes		WORD	DIRECT	M:M+1 = D
ST	0xfd	253	STD	REG_D	yes		WORD	EXTENDED	M:M+1 = D
ST	0xed	237	STD	REG_D	yes		WORD	INDEXED	M:M+1 = D
ST	0x10df	4319	STS	REG_S	yes		WORD	DIRECT	M:M+1 = S
ST	0x10ff	4351	STS	REG_S	yes		WORD	EXTENDED	M:M+1 = S
ST	0x10ef	4335	STS	REG_S	yes		WORD	INDEXED	M:M+1 = S
ST	0xdf	223	STU	REG_U	yes		WORD	DIRECT	M:M+1 = U
ST	0xff	255	STU	REG_U	yes		WORD	EXTENDED	M:M+1 = U
ST	0xef	239	STU	REG_U	yes		WORD	INDEXED	M:M+1 = U
ST	0x9f	159	STX	REG_X	yes		WORD	DIRECT	M:M+1 = X
ST	0xbf	191	STX	REG_X	yes		WORD	EXTENDED	M:M+1 = X
ST	0xaf	175	STX	REG_X	yes		WORD	INDEXED	M:M+1 = X
ST	0x109f	4255	STY	REG_Y	yes		WORD	DIRECT	M:M+1 = Y
ST	0x10bf	4287	STY	REG_Y	yes		WORD	EXTENDED	M:M+1 = Y
ST	0x10af	4271	STY	REG_Y	yes		WORD	INDEXED	M:M+1 = Y
SUB	0x90	144	SUBA	REG_A		BYTE		DIRECT	A = A - M
SUB	0xb0	176	SUBA	REG_A		BYTE		EXTENDED	A = A - M
SUB	0x80	128	SUBA	REG_A		BYTE		IMMEDIATE	A = A - M
SUB	0xa0	160	SUBA	REG_A		BYTE		INDEXED	A = A - M
SUB	0xd0	208	SUBB	REG_B		BYTE		DIRECT	B = B - M
SUB	0xf0	240	SUBB	REG_B		BYTE		EXTENDED	B = B - M
SUB	0xc0	192	SUBB	REG_B		BYTE		IMMEDIATE	B = B - M
SUB	0xe0	224	SUBB	REG_B		BYTE		INDEXED	B = B - M
SUB	0x93	147	SUBD	REG_D		WORD		DIRECT_WORD	D = D - M:M+1
SUB	0xb3	179	SUBD	REG_D		WORD		EXTENDED_WORD	D = D - M:M+1
SUB	0x83	131	SUBD	REG_D		WORD		IMMEDIATE_WORD	D = D - M:M+1
SUB	0xa3	163	SUBD	REG_D		WORD		INDEXED_WORD	D = D - M:M+1
SWI	0x3f	63	SWI					INHERENT	Software interrupt 1
SWI	0x103f	4159	SWI2					INHERENT	Software interrupt 2
SWI	0x113f	4415	SWI3					INHERENT	Software interrupt 3
SYNC	0x13	19	SYNC					INHERENT	Synchronize to Interrupt
TFR	0x1f	31	TFR			BYTE		IMMEDIATE	None
TST	0xd	13	TST			BYTE		DIRECT	Test M
TST	0x7d	125	TST			BYTE		EXTENDED	Test M
TST	0x6d	109	TST			BYTE		INDEXED	Test M
TST	0x4d	77	TSTA	REG_A				INHERENT	Test A
TST	0x5d	93	TSTB	REG_B				INHERENT	Test B
